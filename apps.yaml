---

- name: Deploy all apps via Podman container
  hosts: all

  tasks:
    - name: Get info about caddy_connect network
      register: caddy_connect_network_info
      containers.podman.podman_network_info:
        name: caddy_connect

    - name: Create caddy directories
      ansible.builtin.file:
        path: "/data/{{ item }}"
        state: directory
      loop:
        - caddy
        - caddy/data
        - caddy/config

    - name: Copy Caddyfile
      register: caddyfile_result
      ansible.builtin.copy:
        src: Caddyfile
        dest: /data/caddy/Caddyfile

    - name: Ensure Caddy is running
      register: caddy_container_result
      containers.podman.podman_container:
        name: caddy
        image: "docker.io/caddy:2.7.6-alpine@sha256:2e1d4592f1718bb47645da5a83a846fe19094f18e6c921fdf56d174f05c63213" # yamllint disable-line
        image_strict: true
        state: started
        network: host
        dns:
          - "{{ caddy_connect_network_info.networks.0.subnets.0.gateway }}"
          - "185.12.64.1"
        dns_search: dns.podman
        publish:
          - "80:80"
          - "443:443"
          - "443:443/udp"
        restart_policy: always
        # healthcheck: http://localhost:8080
        volumes:
          - /data/caddy/Caddyfile:/etc/caddy/Caddyfile
          - /data/caddy/data:/data
          - /data/caddy/config:/config
          - /var/www:/srv

    - name: Reload Caddy
      when: caddyfile_result is changed and caddy_container_result is not changed # yamllint disable-line
      containers.podman.podman_container_exec:
        name: caddy
        workdir: /etc/caddy
        command: caddy reload

    - name: Create vhost directories
      ansible.builtin.file:
        path: "/var/www/{{ item }}"
        state: directory
      loop:
        - citizenalpha.de
        - citizenalpha.de/www
        - citizenalpha.de/www/htdocs
